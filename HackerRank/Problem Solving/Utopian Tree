#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'utopianTree' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER n as parameter.
#

def utopianTree(n):
    # Variable to check the number of cycles iterated
    count = 1
    # Variable to store the height after 'n' cycles
    height = 1
    # Logic to find the height of tree after every cycle 
    # 'count = odd' spring cycle
    # 'count = even' summer cycle
    while count <= n :
        if count % 2 != 0 :
            height = height * 2
        else :
            height = height + 1
        count = count + 1
        
    return height

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input().strip())

    for t_itr in range(t):
        n = int(input().strip())

        result = utopianTree(n)

        fptr.write(str(result) + '\n')

    fptr.close()
